 
name: CI

on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2
      - name: Install libssh prerequisites
        run: sudo apt-get update; sudo apt-get install git cmake openssl libssl-dev zlib1g-dev libcmocka-dev libsocket-wrapper libnss-wrapper libpam-wrapper libuid-wrapper -y
      - name: Clone libssh
        run: sudo git clone --depth 1 --branch libssh-0.9.5 https://git.libssh.org/projects/libssh.git /opt/libssh
      - name: Compile libssh
        run: cd /opt/libssh; sudo mkdir build; cd build; sudo cmake /opt/libssh -DUNIT_TESTING=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release; sudo make; sudo make install
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  
  release:
    name: Create release and upload assets
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install cross
        run: cargo install cross
      - name: Test project
        run: cross test --target arm-unknown-linux-gnueabihf
      - name: Build project
        run: cross build --target arm-unknown-linux-gnueabihf --release
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./target/arm-unknown-linux-gnueabihf/release/infco-rs
          asset_name: infco-rs_arm-unknown-linux-gnueabihf
          asset_content_type: application/octet-stream
